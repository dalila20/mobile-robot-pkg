<?xml version="1.0" encoding="UTF-8"?>

<launch>

  <!-- constants -->

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find mobile_robot_pkg)/urdf/carro_simplified.urdf.xacro"/>

  <!-- include the world -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mobile_robot_pkg)/worlds/teste.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- spawn the model -->

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
  <param name="base_local_planner" value="local_planner/LocalPlanner" />

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <!-- load the controllers -->

  <rosparam file="$(find mobile_robot_pkg)/config/robot_control.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/car" args="joint_state_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/car/joint_states" />
  </node>

<!--

  joint0_position_controller:
    type: effort_controllers/JointPositionController
    joint: right_front_wheel_joint
    pid: {p: 100.0, i: 0.01, d: 10.0}
  joint1_position_controller:
    type: effort_controllers/JointPositionController
    joint: left_front_wheel_joint
    pid: {p: 100.0, i: 0.01, d: 10.0}
  joint2_position_controller:
    type: effort_controllers/JointPositionController
    joint: right_back_wheel_joint
    pid: {p: 100.0, i: 0.01, d: 10.0}
  joint3_position_controller:
    type: effort_controllers/JointPositionController
    joint: left_back_wheel_joint
    pid: {p: 100.0, i: 0.01, d: 10.0}

-->


</launch>
